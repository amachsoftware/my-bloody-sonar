version: '3.9'
services:

  sonar:
    image: mslipets/my-bloody-sonar:latest
    depends_on:
      - postgres
      - ldap
    volumes:
      - sonar-home:/opt/sonarqube
      - ./config.yml:/config.yml
    ports:
      - '9000:9000'
    links:
      - postgres
      - ldap
    environment:
      SONAR_ADMIN_USERNAME: "sonar.admin"
      SONAR_ADMIN_PASSWORD: "snr.adm.pwd"
      SONAR_BASE_URL: "http://localhost:9000/"
      SONAR_ENV_CONFIG_YML_URL: "file:///config.yml"
      SONAR_ENV_PLUGINS: ""
      SONAR_JDBC_USERNAME: postgres
      SONAR_JDBC_PASSWORD: postgres
      SONAR_JDBC_URL: "jdbc:postgresql://postgres:5432/sonar?gssEncMode=disable"

      # LDAP # https://docs.sonarqube.org/latest/setup/environment-variables/#header-4
      SONAR_SECURITY_REALM: LDAP
      SONAR_AUTHENTICATOR_DOWNCASE: "true"
      LDAP_URL: ldap://ldap:389
      LDAP_BINDDN: cn=readonly,dc=example,dc=org
      LDAP_BINDPASSWORD: readonly
      LDAP_AUTHENTICATION: simple
      LDAP_REALM: example.org
      LDAP_USER_BASEDN: cn=users,dc=example,dc=org
      LDAP_USER_REALNAMEATTRIBUTE: cn
      LDAP_USER_EMAILATTRIBUTE: email
      LDAP_GROUP_BASEDN: cn=groups,dc=example,dc=org
      # ------------------------------------------------------------------------------

      SONAR_ENV_CONFIG_YML_URL_POLLING: 10
      http_proxy: ${http_proxy}
      https_proxy: ${https_proxy}
      no_proxy: ${no_proxy}
      DEBUG: "YES"

  postgres:
    image: postgres
    environment:
      POSTGRES_DB: sonar
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  ldap:
    image: osixia/openldap:1.2.1
    volumes:
      - ./assets/ldap/bootstrap/custom.ldif:/container/service/slapd/assets/config/bootstrap/ldif/100-custom.ldif
    ports:
      - '10389:389'
    environment:
      LDAP_DOMAIN: example.org
      LDAP_BASE_DN: dc=example,dc=org
      LDAP_ADMIN_PASSWORD: admin
      LDAP_READONLY_USER: 'true'
      LDAP_TLS: "false"
    command: --copy-service --loglevel debug

volumes:
  sonar-home:
    name: sonar-home

